{
    "components": {
        "schemas": {
            "MediaTokenResponse": {
                "type": "object",
                "properties": {
                    "notAfter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "serializedToken": {
                        "type": "string"
                    },
                    "notBefore": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "ProfilesResponse": {
                "type": "object",
                "properties": {
                    "profiles": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/MvpdProfileResponse"
                        },
                        "type": "object"
                    }
                }
            },
            "ConfigurationResponse": {
                "type": "object",
                "properties": {
                    "platformCategory": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "sdkType": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "requestor": {
                        "$ref": "#/components/schemas/ProgrammerType"
                    }
                }
            },
            "DecisionResponse": {
                "description": "Response object for decision requests",
                "type": "object",
                "properties": {
                    "notAfter": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "resource": {
                        "description": "The resource identifier for which the authorize decision is returned.",
                        "type": "string"
                    },
                    "authorized": {
                        "description": "The authorization decision for the resource. Can be either true or false.",
                        "type": "boolean",
                        "example": false
                    },
                    "serviceProvider": {
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "type": "string"
                    },
                    "source": {
                        "description": "Information about decision source: degradation, temppass, mvpd or dummy.",
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ErrorInformation"
                    },
                    "mvpd": {
                        "description": "The internal unique identifier associated with an Identity Provider during on-boarding process.",
                        "type": "string"
                    },
                    "notBefore": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "token": {
                        "$ref": "#/components/schemas/MediaTokenResponse"
                    }
                }
            },
            "Message": {
                "type": "object"
            },
            "LogoutResponse": {
                "type": "object",
                "properties": {
                    "logouts": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/MvpdLogoutResponse"
                        },
                        "type": "object"
                    }
                }
            },
            "DecisionsResponse": {
                "type": "object",
                "properties": {
                    "decisions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DecisionResponse"
                        }
                    }
                }
            },
            "SessionStatusResponse": {
                "description": "Response object for session status requests",
                "type": "object",
                "properties": {
                    "existing": {
                        "description": "The existing parameters that were already provided.",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "missing": {
                        "description": "The existing parameters that were already provided.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MvpdLogoutResponse": {
                "description": "Mvpd logout response",
                "type": "object",
                "properties": {
                    "actionType": {
                        "description": "The type of interaction the client application must perform in order to continue the flow with the action specified by the parameter \"actionName\".",
                        "type": "string"
                    },
                    "mvpd": {
                        "description": "The internal unique identifier associated with an Identity Provider during on-boarding process.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The logout URL used to perform logout flow with the MVPD endpoint. It is not present when: actionName=complete or actionName=invalid.",
                        "type": "string"
                    },
                    "actionName": {
                        "description": "The action to be performed in a user-agent.",
                        "type": "string"
                    }
                }
            },
            "ErrorInformation": {
                "type": "object",
                "properties": {
                    "trace": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "helpUrl": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "status": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "ProgrammerType": {
                "type": "object",
                "properties": {
                    "mvpds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MvpdType"
                        }
                    },
                    "channels": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Domain"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "MvpdType": {
                "type": "object",
                "properties": {
                    "displayInPlatformPicker": {
                        "type": "boolean"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "platformMappingId": {
                        "type": "string"
                    },
                    "authPerBrowserSession": {
                        "type": "boolean"
                    },
                    "enablePlatformServices": {
                        "type": "boolean"
                    },
                    "isTempPass": {
                        "type": "boolean"
                    },
                    "isProxy": {
                        "type": "boolean"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "authPerAggregator": {
                        "type": "boolean"
                    },
                    "passiveAuthnEnabled": {
                        "type": "boolean"
                    },
                    "enforcePlatformPermissions": {
                        "type": "boolean"
                    },
                    "boardingStatus": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "createSessionUsingPOST_1_request": {
                "type": "object",
                "properties": {
                    "redirectUrl": {
                        "description": "The url where the client application is redirected to when authentication is completed. The value must be URL encoded.",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "The originating domain of the application performing mvpd login.",
                        "type": "string"
                    },
                    "mvpd": {
                        "description": "The MVPD identifier associated with the end-user's subscription.If device platform has limitations in providing a value, then the application will have to resume the authentication session later on and provide a valid value.",
                        "type": "string"
                    }
                }
            },
            "UserMetadataResponse": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string",
                        "enum": [
                            "missing_authentication_code",
                            "authentication_session_invalidated",
                            "authentication_session_missing",
                            "preauthorization_authentication_session_missing",
                            "authentication_session_expired",
                            "preauthorization_authentication_session_expired",
                            "authentication_session_issuer_mismatch",
                            "unknown_integration",
                            "invalid_device_id",
                            "invalid_requestor",
                            "invalid_redirect_url",
                            "invalid_session",
                            "missing_dcr_application",
                            "missing_resource",
                            "missing_resources",
                            "invalid_device_info",
                            "authorization_not_found",
                            "authorization_expired",
                            "malformed_authz_request",
                            "authorization_denied_by_mvpd",
                            "authorization_denied_by_degradation_rule",
                            "authorization_denied_by_degradation_configuration_change",
                            "authorization_denied_by_parental_controls",
                            "authorization_denied_by_session_invalidated",
                            "authorization_denied_by_hba_policies",
                            "identity_not_recognized_by_mvpd",
                            "network_received_error",
                            "invalid_refresh_token",
                            "preauthorization_denied_by_mvpd",
                            "too_many_resources",
                            "invalid_decision_resources",
                            "invalid_mvpd",
                            "network_connection_timeout",
                            "maximum_execution_time_exceeded",
                            "internal_error",
                            "invalid_certificate",
                            "need_to_reauthenticate",
                            "temppass_invalid_identity",
                            "temppass_expired",
                            "temppass_max_resources_exceeded",
                            "temppass_invalid_configuration",
                            "registered_app_mismatch",
                            "invalid_platformid",
                            "invalid_platformtrait",
                            "invalid_platformcategory_trait",
                            "invalid_platform_configuration",
                            "disabled_platform_services",
                            "invalid_mvpd_platform_settings",
                            "unsupported_mvpd_boarding_status",
                            "invalid_profile_exchange_configuration",
                            "invalid_sso_partner",
                            "invalid_sso_partner_saml_response",
                            "degraded_integration",
                            "framework_permissions_not_present",
                            "framework_permissions_not_determined",
                            "framework_permissions_not_granted",
                            "framework_mappingid_not_determined",
                            "framework_mappingid_mismatch"
                        ]
                    },
                    "value": {
                        "type": "object",
                        "properties": {
                            
                        }
                    }
                }
            },
            "Domain": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "mvpdInitiated": {
                        "type": "boolean"
                    }
                }
            },
            "SessionResponse": {
                "description": "Response object for session requests",
                "type": "object",
                "properties": {
                    "actionType": {
                        "description": "The type of interaction the client application must perform in order to continue the flow with the action specified by the parameter \"actionName\".",
                        "type": "string"
                    },
                    "code": {
                        "description": "The registration code that can be used on the secondary device to continue the authentication flow.",
                        "type": "string"
                    },
                    "serviceProvider": {
                        "description": "The id of the service provider.",
                        "type": "string"
                    },
                    "missingParameters": {
                        "description": "The missing parameters that need to be provided in order to complete the authentication flow.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sessionId": {
                        "description": "The opaque identifier that can be used for tracking user activity.",
                        "type": "string"
                    },
                    "mvpd": {
                        "description": "The id of the identity provider.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The url where the application needs to navigate.",
                        "type": "string"
                    },
                    "actionName": {
                        "description": "The action that primary device need to perform in order to complete authentication flow.",
                        "type": "string"
                    }
                }
            },
            "MvpdProfileResponse": {
                "description": "Mvpd profile response",
                "type": "object",
                "properties": {
                    "notAfter": {
                        "format": "int64",
                        "description": "The maximum timestamp for the authentication profile time-to-live (ttl).",
                        "type": "integer"
                    },
                    "attributes": {
                        "description": "The list of user metadata attributes. These attributes can be mandatory (userId) or non-mandatory (the rest of the user metadata fields like zip, householdId, maxRating, etc.).",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/UserMetadataResponse"
                        },
                        "type": "object"
                    },
                    "type": {
                        "description": "The type of the authenticated profile.",
                        "type": "string"
                    },
                    "issuer": {
                        "description": "The entity that owns the authenticated profile.",
                        "type": "string"
                    },
                    "notBefore": {
                        "format": "int64",
                        "description": "The minimum timestamp for the authentication profile time-to-live (ttl).",
                        "type": "integer"
                    }
                }
            },
            "retrieveVerificationTokenUsingPOST_request": {
                "type": "object",
                "properties": {
                    "redirectUrl": {
                        "description": "The url where the client application is redirected to when authentication is completed. The value must be URL encoded.",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "The originating domain of the application performing mvpd login.",
                        "type": "string"
                    }
                },
                "required": [
                    "domainName",
                    "redirectUrl"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https://sp.auth.adobe.com/api/v2"
        },
        {
            "url": "https://sp-prequal.auth.adobe.com/api/v2"
        },
        {
            "url": "https://sp-prequal.auth-staging.adobe.com/api/v2"
        },
        {
            "url": "https://sp.auth-staging.adobe.com/api/v2"
        }
    ],
    "openapi": "3.0.1",
    "paths": {
        "/{serviceProvider}/decisions/authorize/{mvpd}": {
            "post": {
                "summary": "Retrieve authorization decisions using specific MVPD",
                "x-codegen-request-body-name": "resources",
                "requestBody": {
                    "description": "A list of resourceIds that identifies the content that might be accessible to a user and is recognized by MVPD authorization endpoints.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "description": "In order to perform the preauthorization flow, a valid authenticated profile must be found in the backend for the specified MVPD. If there is no authenticated profile found in the backend for the specified MVPD, then a validation error is returned in the response body, as described in Public APIs - Error codes.",
                "operationId": "retrieveAuthorizeDecisionsForMvpdUsingPOST_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DecisionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "mvpd",
                        "description": "The internal unique identifier associated with an Identity Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Subject-Token",
                        "description": "The end-user platform identity as specified in Platform requirements for Adobe SSO."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "The media type accepted by the Adobe Primetime Authentication backend application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Partner-Framework-Status",
                        "description": "The Base64-encoded payload containing the partner framework status.",
                        "required": true
                    }
                ],
                "tags": [
                    "4. Decision API"
                ]
            }
        },
        "/{serviceProvider}/logout/{mvpd}": {
            "get": {
                "summary": "Initiate logout for all authenticated profiles of specific MVPD",
                "description": "The logout service performs the following: deletes the authenticated profiles found in the backend for the specific device, client application and specified MVPD returns a list of actions the client application must perform in order to finalize the logout flow for the authenticated profile with specified MVPD",
                "operationId": "getLogoutForMvpdUsingGET_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "mvpd",
                        "description": "The internal unique identifier associated with an Identity Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "redirectUrl",
                        "description": "The final redirect url where the programmer application navigates to when the logout final is completed with the mvpd. This parameter needs to be included when the programmer application initiates the logout flow with the mvpd using the \"url\" attribute received in OneAPI logout response."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "5. Logout API"
                ]
            }
        },
        "/{serviceProvider}/profiles/code/{code}": {
            "get": {
                "summary": "Retrieve authenticated profiles for specific code\n",
                "description": "The profiles service performs the following: returns the authenticated profiles found in the Adobe Primetime Authentication backend for the respective code provided as a path parameter.",
                "operationId": "getProfileForCodeUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfilesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "code",
                        "description": "The registration code obtained after starting authentication on the primary device",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Subject-Token",
                        "description": "The end-user platform identity as specified in Platform requirements for Adobe SSO."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "The media type accepted by the Adobe Primetime Authentication backend application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "3. Profiles API"
                ]
            }
        },
        "/authenticate/{serviceProvider}/{code}": {
            "get": {
                "summary": "Start authentication session",
                "description": "Perform authentication in user agent",
                "operationId": "startAuthenticationUsingGET_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "code",
                        "description": "The registration code obtained after starting authentication on the primary device",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "2. Sessions API"
                ]
            }
        },
        "/{serviceProvider}/configuration": {
            "get": {
                "summary": "Retrieve configuration for specific service provider",
                "description": "The Configuration API can be used to retrieve the configuration associated with a particular Service Provider.",
                "operationId": "handleRequestUsingGET_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigurationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "profile",
                        "description": "Provide profile id"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "1. Configuration API"
                ]
            }
        },
        "/{serviceProvider}/profiles": {
            "get": {
                "summary": "Retrieve authenticated profiles",
                "description": "The profiles service performs the following: returns the authenticated profiles found in the Adobe Primetime Authentication backend for the respective device and application, each authenticated profile representing an authenticated user with a specific MVPD",
                "operationId": "getProfilesUsingGET_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfilesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Partner-Framework-Status",
                        "description": "The Base64-encoded payload containing the partner framework status.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "3. Profiles API"
                ]
            }
        },
        "/{serviceProvider}/profiles/sso/{partner}": {
            "post": {
                "summary": "Retrieve authenticated profile using partner authentication response",
                "x-codegen-request-body-name": "SAMLResponse",
                "requestBody": {
                    "description": "The Platform SSO profile response containing the needed user metadata for creating a valid authentication token.",
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "description": "The partner SSO application sends the mvpd profile information and Pass server saves the profile information in order to use it for decisions calls.",
                "operationId": "createPartnerProfileUsingPOST_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfilesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "partner",
                        "description": "The name of the partner (e.g. Apple) providing the sso framework that is integrated with Pass flows.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Partner-Framework-Status",
                        "description": "The Base64-encoded payload containing the partner framework status.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    }
                ],
                "tags": [
                    "6. Partner SSO API"
                ]
            }
        },
        "/{serviceProvider}/sessions/sso/{partner}": {
            "post": {
                "summary": "Retrieve partner authentication request",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/retrieveVerificationTokenUsingPOST_request"
                            }
                        }
                    },
                    "required": true
                },
                "description": "This endpoint returns a verification code which is essentially the authentication request. The format should follow the general rules of the OneAPI endpoints so it is a json-formatted body. For degraded integrations, return a json response indicating that the integration is degraded and the next call should be the one in /decisions endpoint.",
                "operationId": "retrieveVerificationTokenUsingPOST",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "partner",
                        "description": "The name of the partner (e.g. Apple) providing the sso framework that is integrated with Pass flows.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Partner-Framework-Status",
                        "description": "The Base64-encoded payload containing the partner framework status.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "The media type accepted by the Adobe Primetime Authentication backend application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "6. Partner SSO API"
                ]
            }
        },
        "/{serviceProvider}/sessions": {
            "post": {
                "summary": "Create authentication session",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/createSessionUsingPOST_1_request"
                            }
                        }
                    }
                },
                "description": "In order to initiate the authentication session from a primary device only a valid serviceProvider parameter value must be provided, while the mvpd, domainName and redirectUrl parameter values may be provided in a later call.",
                "operationId": "createSessionUsingPOST_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Subject-Token",
                        "description": "The end-user platform identity as specified in Platform requirements for Adobe SSO."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "The media type accepted by the Adobe Primetime Authentication backend application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "2. Sessions API"
                ]
            }
        },
        "/{serviceProvider}/decisions/preauthorize/{mvpd}": {
            "post": {
                "summary": "Retrieve preauthorization decisions using specific MVPD",
                "x-codegen-request-body-name": "resources",
                "requestBody": {
                    "description": "A list of resourceIds that identifies the content that might be accessible to a user and is recognized by MVPD authorization endpoints.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "description": "In order to perform the preauthorization flow, a valid authenticated profile must be found in the backend for the specified MVPD. If there is no authenticated profile found in the backend for the specified MVPD, then a validation error is returned in the response body, as described in Public APIs - Error codes.",
                "operationId": "retrievePreAuthorizeDecisionsForMvpdUsingPOST_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DecisionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "mvpd",
                        "description": "The internal unique identifier associated with an Identity Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Subject-Token",
                        "description": "The end-user platform identity as specified in Platform requirements for Adobe SSO."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "The media type accepted by the Adobe Primetime Authentication backend application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Partner-Framework-Status",
                        "description": "The Base64-encoded payload containing the partner framework status.",
                        "required": true
                    }
                ],
                "tags": [
                    "4. Decision API"
                ]
            }
        },
        "/{serviceProvider}/sessions/{code}": {
            "post": {
                "summary": "Resume authentication session",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/createSessionUsingPOST_1_request"
                            }
                        }
                    }
                },
                "description": " Continue / update authentication for existing authentication session using code",
                "operationId": "resumeSessionUsingPOST_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "code",
                        "description": "The registration code obtained after starting authentication on the primary device",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "The media type accepted by the Adobe Primetime Authentication backend application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "2. Sessions API"
                ]
            },
            "get": {
                "summary": "Retrieve authentication session using code",
                "description": "Retrieve information for existing authentication session using code",
                "operationId": "getSessionStatusUsingGET_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "code",
                        "description": "The registration code obtained after starting authentication on the primary device",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Authorization",
                        "description": "The authorization header containing OAuth2 access token obtained through dynamic client registration process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    }
                ],
                "tags": [
                    "2. Sessions API"
                ]
            }
        },
        "/{serviceProvider}/profiles/{mvpd}": {
            "get": {
                "summary": "Retrieve authenticated profiles for specific MVPD",
                "description": "The profiles service performs the following: returns the authenticated profiles found in the Adobe Primetime Authentication backend for the respective device, application and specific MVPD provided as a path parameter.",
                "operationId": "getProfileForMvpdUsingGET",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfilesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request was invalid. Check the JSON-based error information provided in the response body.",
                        "content": {
                            
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The access token is not valid, the client application needs to obtain a new one using the information from dynamic client registration process.",
                        "content": {
                            
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Something is broken on Adobe Primetime Authentication services side. The JSON-based error information provided in the response body will explain further.",
                        "content": {
                            
                        }
                    },
                    "302": {
                        "description": "Redirect. The response contains a location redirect to continue the flow until reaching the MVPD login page.",
                        "content": {
                            
                        }
                    },
                    "404": {
                        "description": "Not found. There is no authentication session found on Adobe Primetime Authentication backend.",
                        "content": {
                            
                        }
                    },
                    "405": {
                        "description": "Method not allowed.The client tried to use an HTTP methods that the specified resource doesn't allow.",
                        "content": {
                            
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "mvpd",
                        "description": "The internal unique identifier associated with an Identity Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "serviceProvider",
                        "description": "The internal unique identifier associated with a Service Provider during on-boarding process.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Device-Identifier",
                        "description": "The application device identifier as described in AP-Device-Identifier.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Device-Info",
                        "description": "Strongly recommended to use it always when the application's device platform allows to provide valid values explicitly.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "X-Forwarded-For",
                        "description": "The Streaming Device IP address. Must use it only for Server-to-Server implementations when the call is made by the Programmer Service and not the Streaming Device, while for Client-to-Server implementations, the Streaming Device IP address is implicitly sent."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Adobe-Subject-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Platform Identity method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AD-Service-Token",
                        "description": "The Adobe Pass Authentication backend application can also make use of authenticated profiles obtained through Single Sign-On using Service Token method"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-Partner-Framework-Status",
                        "description": "The Base64-encoded payload containing the partner framework status.",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-SDK-Identifier",
                        "description": "The SDK identifier as specified in AP-SDK-Identifier. Must use it only by an Adobe Primetime Authentication SDK."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Accept",
                        "description": "The media type accepted by the client application. If specified it must always be application/json."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "User-Agent",
                        "description": "The user agent of the client application."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "AP-TempPass-Identity",
                        "description": "The application user information as specified in Flexible Temporary Pass Identity."
                    }
                ],
                "tags": [
                    "3. Profiles API"
                ]
            }
        }
    },
    "x-original-swagger-version": "2.0",
    "info": {
        "title": "REST API",
        "version": "V2"
    },
    "tags": [
        {
            "name": "3. Profiles API",
            "description": "It can be used to obtain information about authenticated profiles found in the Adobe Pass Authentication services for the respective device and application."
        },
        {
            "name": "2. Sessions API",
            "description": "It can be used to initiate user authentication."
        },
        {
            "name": "6. Partner SSO API",
            "description": "It can be used to handle partner authentication."
        },
        {
            "name": "5. Logout API",
            "description": "It deletes the authenticated profiles found in the backend for the specific device, client application and specified MVPD."
        },
        {
            "name": "4. Decision API",
            "description": "It can be used to obtain an authorization/preauthorization decision/s for one resource."
        },
        {
            "name": "1. Configuration API",
            "description": "It can be used to retrieve the configuration associated with a particular Service Provider."
        }
    ]
}